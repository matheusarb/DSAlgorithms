// See https://aka.ms/new-console-template for more information
using System.Globalization;
using System.Text;

var msg = "Project Euller Challenges";
static string convertToHifen(string msg)
{
    var result = new StringBuilder();
    var length = msg.Length;
    var counter = 0;

    while (counter < length)
    {
        result.Append("-");
        counter++;
    }

    return result.ToString();
}
Console.WriteLine($"{msg}\n{convertToHifen(msg)}\n");

// 1. If we list all the natural numbers below 10 that are multiples of 3 or 5 we get 3, 5, 6 and 9 
// The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000

static int sumOfMultiplesOf3And5Below1000()
{
    var result = 0;
    var counter = 0;
    while (counter < 1000)
    {
        if (counter % 3 == 0 && counter % 5 == 0)
        {
            result += counter;
            counter++;
            continue;
        }
        if (counter % 3 == 0)
        {
            result += counter;
        }
        if (counter % 5 == 0)
        {
            result += counter;
        }
        counter++;
    }
    return result;
}

// 2. Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:
// 1 2 3 5 8 13 21 34 55 89...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms

// System.Console.WriteLine(Fibonnaci3EvenNumbersBelow4Million());
static int FibonnaciEvenNumbersBelow4Million()
{
    var result = 0;
    var fibonnaci = new List<int> { 0, 1 };

    for (var i = 1; i < 4000000; i++)
    {
        int fiboNext = fibonnaci[i] + fibonnaci[i - 1];
        fibonnaci.Add(fiboNext);

        if (fiboNext % 2 == 0)
            result += fiboNext;
    }

    return result;
}

static int Fibonnaci2EvenNumbersBelow4Million()
{
    int result = 0;
    var i = 1;
    var fibonnaci = new List<int> { 1, 2 };

    while (true)
    {
        int fiboNext = fibonnaci[i] + fibonnaci[i - 1];
        fibonnaci.Add(fiboNext);
        i++;
        
        if(fiboNext > 4000000)
            break;
            
        if (fiboNext % 2 == 0)
            result += fiboNext;
    }
    return result;
}

static int Fibonnaci3EvenNumbersBelow4Million()
    {
        int result = 0;
        int fiboPrev = 1;
        int fiboCurr = 2;

        while (fiboCurr <= 4000000)
        {
            if (fiboCurr % 2 == 0)
                result += fiboCurr;

            int fiboNext = fiboPrev + fiboCurr;
            fiboPrev = fiboCurr;
            fiboCurr = fiboNext;
        }

        return result;
    }